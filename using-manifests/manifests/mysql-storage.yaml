# This file consists of two parts:
# 1. The first part defines the Persistent Volume(pv). Customize the amount of allocated storage in spec.capacity.storage and In spec.hostPath specify the volume mount point.
# 2. The second part of the file defines the Persitent Volume Claim(pvc)

# Deploy resources : $ kubectl apply -f manifests/mysql-storage.yaml
# Delete resources : $ kubectl delete -f manifests/mysql-storage.yaml

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  namespace: countries # PV is a cluster-wide resource but seems like this is needed here.
  labels:
    type: local
spec:                         
  storageClassName: manual   
  capacity:                  
    storage: 15Gi             
  accessModes:                
    - ReadWriteOnce           # This access mode allows the volume to be mounted as read-write by a single node at a time.
  hostPath:                  
    path: "/mnt/data"         # The PV is created using storage located on the host machine at the path â€œ/mnt/data.
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc-claim
  namespace: countries
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi          # Should be equal or less than the PV capacity created.

# Confirm deployments
# PV : $ kubectl get pv ** pv are cluster-wide resources same as Nodes and StorageClass 
# and are not namespace-scoped. They remain shared across the entire cluster.

# PVC : This namespace-scoped. You need to check within the namespace.
# $ kubectl get pvc -n countries