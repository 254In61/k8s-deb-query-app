# Deploy resources : $ kubectl apply -f manifests/mysql-deployment.yaml
# Delete resources : $ kubectl delete -f manifests/mysql-deployment.yaml


apiVersion: apps/v1
kind: Deployment
metadata:                                       
  name: mysql-deployment
  namespace: countries                         
spec:                                           
  selector:                          
    matchLabels:    
      app: mysql      
  strategy:         
    type: Recreate                               # type is “Recreate,” meaning the existing Pods are terminated and new ones are created during updates.
  template:                     
    metadata:
      labels:
        app: mysql
    spec:
      containers:                              
      - image: mysql:latest                     # specifies the Docker image to use for the container, which is the latest version of MySQL.
        name: mysql                             # The name of the container is “mysql.”
        env:                                    # section defines environment variables for the container.
        - name: MYSQL_ROOT_PASSWORD             # An environment variable named “MYSQL_ROOT_PASSWORD.”
          valueFrom:                            
            secretKeyRef:                       # It specifies that the value comes from a Secret named “mysql-root-secret,” with the key “password.” This is where the MySQL root password is stored securely.
              name: mysql-root-secret                
              key: password
        ports:                                 
        - containerPort: 3306                   # Port 3306 is opened for MySQL connections.
          name: mysql
        volumeMounts:                           # This section defines where to mount volumes in the container.
        - name: mysql-persistent-storage        # It specifies the volume name.
          mountPath: /var/lib/mysql             # The path within the container where the volume will be mounted. This is typically the location where MySQL stores its data.
      volumes:                                  # This section specifies the volumes to be used in the Pod.
      - name: mysql-persistent-storage          # The name of the volume matches the one specified in volumeMounts.
        persistentVolumeClaim:                  # The PVC provides storage resources for the Pod.
          claimName: mysql-pvc-claim           

