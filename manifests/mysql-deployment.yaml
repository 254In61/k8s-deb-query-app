apiVersion: apps/v1
kind: Deployment
metadata:                                       
  name: mysql-deployment                         
spec:                                           
  selector:                          
    matchLabels:    
      app: mysql      
  strategy:         
    type: Recreate                               # type is “Recreate,” meaning the existing Pods are terminated and new ones are created during updates.
  template:                     
    metadata:
      labels:
        app: mysql
    spec:
      containers:                               # This is an array of containers running in the Pod. In this case, there is one container.
      - image: mysql:latest                     # specifies the Docker image to use for the container, which is the latest version of MySQL.
        name: mysql                             # The name of the container is “mysql.”
        env:                                    # section defines environment variables for the container.
        - name: MYSQL_ROOT_PASSWORD             # An environment variable named “MYSQL_ROOT_PASSWORD.”
          valueFrom:                            
            secretKeyRef:                       # It specifies that the value comes from a Secret named “mysql-root-secret,” with the key “password.” This is where the MySQL root password is stored securely.
              name: mysql-root-secret                
              key: password
        ports:                                  # It specifies the ports to open in the container.
        - containerPort: 3306                   # Port 3306 is opened for MySQL connections.
          name: mysql
        volumeMounts:                           # This section defines where to mount volumes in the container.
        - name: mysql-persistent-storage        # It specifies the volume name.
          mountPath: /var/lib/mysql             # The path within the container where the volume will be mounted. This is typically the location where MySQL stores its data.
      volumes:                                  # This section specifies the volumes to be used in the Pod.
      - name: mysql-persistent-storage          # The name of the volume matches the one specified in volumeMounts.
        persistentVolumeClaim:                  # It references a PersistentVolumeClaim (PVC) named “mysql-pvc.” The PVC provides storage resources for the Pod.
          claimName: mysql-pvc            
---
# Expose the mysql to the outside world through a Service(network port)
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
spec:
  ports:                                       # This section defines the ports to be exposed by the Service.
  - port: 3306                                 # Port 3306 is exposed, which corresponds to the port that MySQL uses for database connections.
  selector:                                    # It selects the Pods to forward network traffic to.
    app: mysql                                 # The Service forwards traffic to Pods with the label “app” equal to “mysql.” These are the Pods managed by the “mysql” Deployment.